# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
# 2021.10.12  Flippy打包
#
name: Flippy打包

on:
  repository_dispatch:
  workflow_dispatch:
#    inputs:
#      days:
#        description: 'Number of days.'
#        required: true
#        default: 60
#      minimum_runs:
#        description: 'The minimum runs to keep for each workflow.'
#        required: true
#        default: 6
#  schedule:
#    - cron: 0 22 * 11 *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  #FEEDS_CONF: feeds.conf.default
  #DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  #MRG_ADD_SH: aarch64/ARMv8.sh
  Update_Ver_SH: aarch64/autoVersion.sh
  Get_Imgs_SH: aarch64/getImgs.sh
  #SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  #UPLOAD_COWTRANSFER: false
  #UPLOAD_WETRANSFER: false
  RECENT_LASTEST: 30 # bin文件和固件保留天数
  TZ: Asia/Shanghai
  FILE_NAME: ARMv8
  PRODUCT_NAME: Flippy_Openwrt
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    name: Flippy打包
    strategy:
      fail-fast: false
      
    steps:
    - name: 准备
      uses: actions/checkout@master

    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 lib32stdc++6 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl rename libpcap0.8-dev swig rsync
        sudo -E apt-get -qq install pigz
        sudo -E apt-get -qq install time
        sudo -E apt-get -qq install sshpass
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    #- name: 检查空间使用情况
    #  if: (!cancelled())
    #  run: df -hT

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
#        echo "::set-env name=useVersionInfo::$useVersionInfo"
#        echo "::set-env name=DATE::$(date "+%Y-%m-%d %H:%M:%S")"

    - name: 打包固件
      id: build
      run: |
        sudo mkdir /opt/kernel
        cd /opt/kernel
        chmod +x $GITHUB_WORKSPACE/$Get_Imgs_SH
        sudo $GITHUB_WORKSPACE/$Get_Imgs_SH
        sudo cp mk_*.tar.gz ../ && cd ..
        sudo tar xvzf mk_*.tar.gz
        cd /opt/openwrt
        sudo wget $(curl -s https://api.github.com/repos/sxml/Actions-OpenWrt/releases/39397290 | grep browser_download_url | cut -d '"' -f 4)
        chmod +x $GITHUB_WORKSPACE/$Update_Ver_SH
        sudo $GITHUB_WORKSPACE/$Update_Ver_SH
        sudo ./mk_s905d_n1.sh
        #sudo ./mk_s905d_n1_fol.sh
        #sudo ./mk_s905d_n1_plus.sh
        sudo ./mk_s905x3_multi.sh
        #sudo ./mk_s905x3_multi_fol.sh
        #sudo ./mk_s905x3_multi_plus.sh
        sudo cp ./*AllPackages.tar.gz ./tmp/
        echo "::set-output name=status::success"

    - name: 整理文件
      id: organize
      if: steps.build.outputs.status == 'success' && !cancelled()
      run: |
        cd /opt/openwrt/tmp/
        pigz -6 -p $(nproc) *.img
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: 编译后硬盘容量
      if: (!cancelled())
      run: df -hT

    - name: 上传bin文件夹
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin/targets/*/*/bin.tar.gz
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: 上传固件
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore

    - name: 固件发布信息
      id: release
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }} for ${{ env.FILE_NAME }}
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          Flippy打包 
          s905x3（X96-Max+, HK1-Box）
          s905d（Phicomm-N1）
          默认IP：192.168.2.1 默认密码： password
          当前使用版本:【编译前的最后一次[➦主源码](https://github.com/coolsnowwolf/lede)更新记录】
          参见 Files4Build 内记录
        artifacts: ${{ env.FIRMWARE }}/*

    - name: 电报机器人信息通知
      if: steps.organize.outputs.status == 'success' && !cancelled()
      run: curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=${{ env.FILE_NAME }}打包完成" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"

#    - name: 上传固件到 cowtransfer
#      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
#      run: |
#        curl -fsSL git.io/file-transfer | sh
#        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
#        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

#    - name: 上传固件到 WeTransfer
#      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
#      run: |
#        curl -fsSL git.io/file-transfer | sh
#        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
#        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
